# user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    lua_shared_dict my_shared_dict 10m;

    # Funci√≥n Lua para cargar las variables de entorno
    init_by_lua_block {
        local env = os.getenv
        ngx.shared.my_shared_dict:set("API_HOST", env("API_HOST") or "localhost")
        ngx.shared.my_shared_dict:set("WEB_HOST", env("WEB_HOST") or "localhost")
    }

    server {
        listen 80;

        location /api/avatar {
            set_by_lua_block $api_host {
                return ngx.shared.my_shared_dict:get("API_HOST")
            }
            proxy_pass http://$api_host:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /api/avatar/spec {
            set_by_lua_block $api_host {
                return ngx.shared.my_shared_dict:get("API_HOST")
            }
            proxy_pass http://$api_host:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /ready {
            set_by_lua_block $api_host {
                return ngx.shared.my_shared_dict:get("API_HOST")
            }
            proxy_pass http://$api_host:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            set_by_lua_block $web_host {
                return ngx.shared.my_shared_dict:get("WEB_HOST")
            }
            proxy_pass http://$web_host:5173/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        error_page 404 /404.html;
        location = /404.html {
            internal;
        }
    }
}
